{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _router = _interopRequireDefault(require(\"next/router\"));\nvar _onDemandEntriesUtils = require(\"./on-demand-entries-utils\");\nvar _default = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var assetPrefix;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            assetPrefix = _ref.assetPrefix;\n            _router[\"default\"].ready(function () {\n              _router[\"default\"].events.on('routeChangeComplete', _onDemandEntriesUtils.setupPing.bind(void 0, assetPrefix, function () {\n                return _router[\"default\"].pathname;\n              }));\n            });\n            (0, _onDemandEntriesUtils.setupPing)(assetPrefix, function () {\n              return _router[\"default\"].pathname;\n            }, _onDemandEntriesUtils.currentPage); // prevent HMR connection from being closed when running tests\n            if (!process.env.__NEXT_TEST_MODE) {\n              document.addEventListener('visibilitychange', function (_event) {\n                var state = document.visibilityState;\n                if (state === 'visible') {\n                  (0, _onDemandEntriesUtils.setupPing)(assetPrefix, function () {\n                    return _router[\"default\"].pathname;\n                  }, true);\n                } else {\n                  (0, _onDemandEntriesUtils.closePing)();\n                }\n              });\n              window.addEventListener('beforeunload', function () {\n                (0, _onDemandEntriesUtils.closePing)();\n              });\n            }\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function _default(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../client/dev/on-demand-entries-client.js"],"names":["assetPrefix","Router","ready","events","on","setupPing","bind","pathname","currentPage","process","env","__NEXT_TEST_MODE","document","addEventListener","_event","state","visibilityState","window"],"mappings":";;;;;;;AAAA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;AACA,IAAA,qBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;uEAEe,SAAA,QAAA,IAAA;IAAA,IAAA,WAAA;IAAA,OAAA,mBAAA,CAAA,IAAA,UAAA,SAAA,QAAA;MAAA;QAAA,QAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;UAAA;YAASA,WAAT,GAAA,IAAA,CAASA,WAAT;YACbC,OAAAA,WAAAA,CAAOC,KAAPD,CAAa,YAAM;cACjBA,OAAAA,WAAAA,CAAOE,MAAPF,CAAcG,EAAdH,CACE,qBADFA,EAEEI,qBAAAA,CAAAA,SAAAA,CAAUC,IAAVD,CAAAA,KAAAA,CAAAA,EAAqBL,WAArBK,EAAkC;gBAAA,OAAMJ,OAAAA,WAAAA,CAAOM,QAA/CF;cAAAA,EAFFJ,CAAAA;YAID,CALDA,CAAAA;YAOA,CAAA,CAAA,EAAA,qBAAA,CAAA,SAAA,EAAUD,WAAV,EAAuB;cAAA,OAAMC,OAAAA,WAAAA,CAAOM,QAApC;YAAA,GAA8CC,qBAAAA,CAAAA,WAA9C,CAAA,CAEA;YACA,IAAI,CAACC,OAAO,CAACC,GAARD,CAAYE,gBAAjB,EAAmC;cACjCC,QAAQ,CAACC,gBAATD,CAA0B,kBAA1BA,EAA+CE,UAAAA,MAAD,EAAY;gBACxD,IAAMC,KAAK,GAAGH,QAAQ,CAACI,eAAvB;gBACA,IAAID,KAAK,KAAK,SAAd,EAAyB;kBACvB,CAAA,CAAA,EAAA,qBAAA,CAAA,SAAA,EAAUf,WAAV,EAAuB;oBAAA,OAAMC,OAAAA,WAAAA,CAAOM,QAApC;kBAAA,GAA8C,IAA9C,CAAA;gBACD,CAFD,MAEO;kBACL,CAAA,CAAA,EAAA,qBAAA,CAAA,SAAA,EAAA,CAAA;gBACD;cACF,CAPDK,CAAAA;cASAK,MAAM,CAACJ,gBAAPI,CAAwB,cAAxBA,EAAwC,YAAM;gBAC5C,CAAA,CAAA,EAAA,qBAAA,CAAA,SAAA,EAAA,CAAA;cACD,CAFDA,CAAAA;YAGD;UACF;UAAA;YAAA,OAAA,QAAA,CAAA,IAAA;QAAA;MAAA;IAAA,GAAA,OAAA;EAAA,C","sourcesContent":["import Router from 'next/router'\nimport { setupPing, currentPage, closePing } from './on-demand-entries-utils'\n\nexport default async ({ assetPrefix }) => {\n  Router.ready(() => {\n    Router.events.on(\n      'routeChangeComplete',\n      setupPing.bind(this, assetPrefix, () => Router.pathname)\n    )\n  })\n\n  setupPing(assetPrefix, () => Router.pathname, currentPage)\n\n  // prevent HMR connection from being closed when running tests\n  if (!process.env.__NEXT_TEST_MODE) {\n    document.addEventListener('visibilitychange', (_event) => {\n      const state = document.visibilityState\n      if (state === 'visible') {\n        setupPing(assetPrefix, () => Router.pathname, true)\n      } else {\n        closePing()\n      }\n    })\n\n    window.addEventListener('beforeunload', () => {\n      closePing()\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"script"}